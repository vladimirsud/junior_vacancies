import requests
import json
import time

# Модуль для работы с операционной системой. Будем использовать для работы с файлами
import os


def get_page(page=0, area=16):
    """
    Создаем метод для получения страницы со списком вакансий.
    Аргументы:
        page - Индекс страницы, начинается с 0. Значение по умолчанию 0, т.е. первая страница
        area - код города, по умолчанию 16 - код города Минск
    """

    # Справочник для параметров GET-запроса
    params = {
        'text': 'python',  # Текст фильтра. В имени должно быть слово "python"
        'area': area,  # Поиск ощуществляется по вакансиям города Минск
        'page': page,  # Индекс страницы поиска на HH
        'per_page': 100,  # Кол-во вакансий на 1 странице
        'period': 1
    }

    req = requests.get('https://api.hh.ru/vacancies', params)  # Посылаем запрос к API
    data = req.content.decode()  # Декодируем его ответ, чтобы Кириллица отображалась корректно
    req.close()
    return data


# Считываем первые 2000 вакансий
def parse_data():

    lst_objs = []

    for page in range(0, 20):

        # Преобразуем текст ответа запроса в справочник Python
        jsObj = json.loads(get_page(page))
        lst_objs.extend(jsObj['items'])
        # Сохраняем файлы в папку {путь до текущего документа со скриптом}\docs\pagination
        # Определяем количество файлов в папке для сохранения документа с ответом запроса
        # Полученное значение используем для формирования имени документа
        nextFileName = f'data/{page}.json'

        # Создаем новый документ, записываем в него ответ запроса, после закрываем
        # f = open(nextFileName, mode='w', encoding='utf8')
        # f.write(json.dumps(jsObj, ensure_ascii=False))
        # f.close()

        # Проверка на последнюю страницу, если вакансий меньше 2000
        if (jsObj['pages'] - page) <= 1:
            break

        # Необязательная задержка, но чтобы не нагружать сервисы hh, оставим. 5 сек мы может подождать
        time.sleep(0.25)
    return lst_objs

print('Старницы поиска собраны')